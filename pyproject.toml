[tool.poetry]
name = "obsidian-debrief"
version = "0.1.0"
description = "A Python module for handling Obsidian debriefing"
authors = ["Your Name <your.email@example.com>"]
readme = "README.md"
packages = [{include = "obsidian_debrief"}]

[tool.poetry.dependencies]
python = "^3.9"
obsidiantools = "^0.10.0"
pydantic = "^2.9.2"
instructor = "^1.6.3"
requests = "^2.32.3"
python-dotenv = "^1.0.1"

[tool.poetry.group.dev.dependencies]
ruff = "^0.7.0"
mypy = "^1.8.0"
pytest = "^8.0.0"
black = "^24.1.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
target-version = "py39"
line-length = 88
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "C",   # flake8-comprehensions
    "B",   # flake8-bugbear
]
ignore = []

[tool.ruff.isort]
known-first-party = ["obsidian_debrief"]
combine-as-imports = true

[tool.mypy]
python_version = "3.9"
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true

[[tool.mypy.overrides]]
module = ["tests.*"]
disallow_untyped_defs = false

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
addopts = "-ra -q"